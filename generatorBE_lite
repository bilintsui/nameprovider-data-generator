#! /bin/bash
# NameProvider Data Generator, v2.4.1

# Preprocess, this requires en_US.lang, zh_CN.lang, zh_TW.lang in the working directory
# This is the lite version, removed all strings that have '%'
cat en_US.lang | dos2unix | grep -vP '^$' | grep -vP '^#' | sed -E -e 's/\s*#.*$//' -E -e 's/\s+$//' -E -e 's/= */=/' -E -e 's/\t//g' -E -e 's/=/\t/' -E -e 's/\\/\\\\/g' -E -e 's/"/\\"/g' | sort -V | uniq | grep -vF '%' > en_US.0
cat zh_CN.lang | dos2unix | grep -vP '^$' | grep -vP '^#' | sed -E -e 's/\s*#.*$//' -E -e 's/\s+$//' -E -e 's/= */=/' -E -e 's/\t//g' -E -e 's/=/\t/' -E -e 's/\\/\\\\/g' -E -e 's/"/\\"/g' | sort -V | uniq | grep -vF '%' > zh_CN.0
cat zh_TW.lang | dos2unix | grep -vP '^$' | grep -vP '^#' | sed -E -e 's/\s*#.*$//' -E -e 's/\s+$//' -E -e 's/= */=/' -E -e 's/\t//g' -E -e 's/=/\t/' -E -e 's/\\/\\\\/g' -E -e 's/"/\\"/g' | sort -V | uniq | grep -vF '%' > zh_TW.0

# Concatenating & formatting
## Find common keys in each language files
cut -f1 en_US.0 | sort | uniq | comm -12 - <(cut -f1 zh_CN.0 | sort | uniq) | sort | uniq | comm -12 - <(cut -f1 zh_TW.0 | sort | uniq) | sort | uniq > keys.common

## Save the common part of each language files
awk '{print $0"\t"}' keys.common | grep -Ff - en_US.0 > en_US.1
awk '{print $0"\t"}' keys.common | grep -Ff - zh_CN.0 > zh_CN.1
awk '{print $0"\t"}' keys.common | grep -Ff - zh_TW.0 > zh_TW.1

## Append strings with keys only appears in en_US to each language files
diff keys.common <(cut -f1 en_US.0 | sort | uniq) | grep -P '^> ' | sed 's/^> //' | awk '{print $0"\t"}' | grep -Ff - en_US.0 >> en_US.1
diff keys.common <(cut -f1 en_US.0 | sort | uniq) | grep -P '^> ' | sed 's/^> //' | awk '{print $0"\t"}' | grep -Ff - en_US.0 >> zh_CN.1
diff keys.common <(cut -f1 en_US.0 | sort | uniq) | grep -P '^> ' | sed 's/^> //' | awk '{print $0"\t"}' | grep -Ff - en_US.0 >> zh_TW.1

## Join
sort en_US.1 | join -t $'\t' - <(sort zh_CN.1) | join -t $'\t' - <(sort zh_TW.1) > data.tsv.0

## Sort
cut -f1 data.tsv.0 | sed 's/\./\t/g' | sort -V | sed 's/\t/\./g' | awk '{print "echo -e \""$0"\\t\" | grep -Ff - data.tsv.0 >> data.tsv.1"}' | sed "s/\"/'/g" | bash

## Final formattting
sed -e "s/\t/' ] = { \"/" -e 's/\t/", "/g' data.tsv.1 | awk "{print \"\\t[ '\"\$0\"\"}" | awk '{print $0"\" },"}' | cat <(echo -e "return {\n\t[ '_meta.version' ] = \"\",") - <(echo '}') > result.lua

# Cleanup
rm *.0 *.1 keys.common
